buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }
    dependencies {
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '1.0.0'
}

repositories {
    mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
}

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'

group 'com.inventage.gradle.docker'
version '0.35.3'

dependencies {
    api gradleApi()
    implementation 'com.google.guava:guava:31.1-jre'
}


gradlePlugin {
    website = 'https://github.com/palantir/gradle-docker'
    vcsUrl = 'https://github.com/palantir/gradle-docker'

    plugins {
        dockerPlugin {
            id = 'com.inventage.docker'
            displayName = 'Inventage Gradle Docker'
            description = 'Inventage Gradle Docker is a simple docker orchestrator for executing docker build and push from within Gradle.'
            implementationClass = 'com.palantir.gradle.docker.PalantirDockerPlugin'
            tags.set(['docker'])
        }
        dockerComposePlugin {
            id = 'com.inventage.docker-compose'
            displayName = 'Inventage Gradle Docker-Compose'
            description = 'Inventage Gradle Docker-Compose is a simple docker-compose orchestrator for running docker-compose from within Gradle.'
            implementationClass = 'com.palantir.gradle.docker.DockerComposePlugin'
            tags.set(['docker'])

        }
        dockerRunPlugin {
            id = 'com.inventage.docker-run'
            displayName = 'Inventage Gradle Docker-Run'
            description = 'Inventage Gradle Docker-Run is a simple docker orchestrator for running Docker containers from within Gradle.'
            implementationClass = 'com.palantir.gradle.docker.DockerRunPlugin'
            tags.set(['docker'])
        }
    }
}

publishing {
    repositories {
        maven {
            name = "inventage"
            url = uri("https://nexus.inventage.com/content/repositories/inventage/")
            credentials(PasswordCredentials::class)
        }
    }
}
